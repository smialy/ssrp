import unittest

from . import TestCase
import ssrp

class ClientTestCase(TestCase):
    def setup(self):
        self.client = ssrp.Client('login', 'password', ssrp.NG_2048)
        self.salt = '64dfc2b9d07be6fd7a3c17783eacdb27'

    def teardown(self):
        self.client = None

    def test_verifier(self):
        salt, v = self.client.verifier(self.salt)
        self.assert_equal(salt, self.salt)
        self.assert_equal(v,    13839237450482981362701578080902499887699298255365381010243121411633579266477008437445902464051054515575606575396349436488710576198202258953675368863347404600998123421102792892533830490755295370008116370936899732643114408604520320387012702109862302596612696446781824373036956489676604434272573520030028492277281751622768278400439620111206703349046156397452854136701741880819857760163599679060082144437565070836172219157404759426287652314712665012949901648911424619408241412616452392015103962769658174391028873068587321782171757981203428176100930831097141873835440494492686332555377826695191520859274728956496853314111)

    def test_authentication(self):
        A = self.client.authentication(82425845709069529453416463369210574587503)
        self.assert_true(len(str(A))> 615)
        M = self.client.process_challenge(self.salt, 1085194715569343013416181836753113134954863316396761518934450118798566987713592210026750785310353007615796254103760736244278078284332721285994973323442697097349128501554370958361132192817420022634386468462445412808676686353774856700603773730791245149186353848380594882092906966190744042983010318954366702551338292648275016380751610175100842677285982502944968005839831548581647950333027227813255168080970099225640783445810863306560994062429046029779787421737201992787263015892972424237320457302439635321172537907647109631757134357943932741390548444160535566123151233725117008591577630571099636312643751753317656838215)
        self.assert_equal(M, 400895181215323495337218377563432365163800385307)


    def test_complex(self):
        I, p = 'a','a'

        client = ssrp.Client(I, p)
        salt, v = client.verifier()
        A = client.authentication()

    
        server = ssrp.Server(I, salt, v, A)
        _salt, B = server.challenge()

        self.assert_equal(_salt, salt)

        M = client.process_challenge(salt, B)
        self.assert_true(server.verify_session(M) is not None)


class ServerTestcase(TestCase):
    def setup(self):
        pass

    def teardown(self):
        pass

def suite():
    unittest.main()

if __name__ == '__main__':
    suite()